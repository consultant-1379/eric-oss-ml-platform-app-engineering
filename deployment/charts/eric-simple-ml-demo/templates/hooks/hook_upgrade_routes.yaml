{{- if .Values.apiGatewayRoute.routes }}
{{- range .Values.apiGatewayRoute.routes }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "eric-simple-ml-demo.name" $ }}-{{ .id }}-upgrade-route-hook
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-rollback
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  backoffLimit: 8
  template:
    spec:
      serviceAccountName: {{ include "eric-simple-ml-demo.name" $ }}-sa
      imagePullSecrets:
          - name: {{ template "eric-simple-ml-demo.pullSecrets" $ }}
      restartPolicy: Never
      containers:
        - name: api-gateway-client
          image: {{ template "eric-simple-ml-demo.imagePath" (dict "imageId" "eric-api-gateway-client" "values" $.Values "files" $.Files) }}
          imagePullPolicy: {{ $.Values.imageCredentials.pullPolicy }}
          env:
          - name: SYSTEM_USER
            valueFrom:
              secretKeyRef:
                name: {{ $.Values.apiGatewayRoute.credentials.name }}
                key: {{ $.Values.apiGatewayRoute.credentials.userKey }}
          - name: SYSTEM_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $.Values.apiGatewayRoute.credentials.name }}
                key: {{ $.Values.apiGatewayRoute.credentials.pwdKey }}
          args:
          - {{ .tag | quote }}
          - {{ .url | quote }}
          - "$(SYSTEM_USER)"
          - "$(SYSTEM_USER_PASSWORD)"
          - "upgrade"
          - "/config/route.json"
          volumeMounts:
          - name: {{ .id }}-route-configuration-vol
            mountPath: /config
          securityContext:
            allowPrivilegeEscalation: true
            runAsNonRoot: false
            runAsUser: 0
      volumes:
      - name: {{ .id }}-route-configuration-vol
        configMap:
          name: {{ include "eric-simple-ml-demo.name" $ }}-{{ .id }}-route-configmap
          defaultMode: 0444
{{- end }}
{{- end }}
